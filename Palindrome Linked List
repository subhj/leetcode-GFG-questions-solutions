/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
 #include <vector>
class Solution {
public:
  bool checkpalindrome(vector<int>& arr){
      int s= 0;
      int end = arr.size()-1;
      while(s<end){
          if(arr[s] != arr[end]){
              return 0;
          }
          s++;
          end--;
          
      }
      return 1; 
  }
    bool isPalindrome(ListNode* head) {
        
        vector<int>arr;
        ListNode* ptr = head;
        while(ptr!=NULL){
            arr.push_back(ptr->val);
            ptr=ptr->next;
        }
        return checkpalindrome(arr);
    }
};
